{
  "name": "@opsimathically/deepclone",
  "version": "1.0.0",
  "description": "Create a deep clone of an object, which unlike the builtin structuredClone, will include functions, et al. Does not clone literally-unclonables, like sockets etc, but will handle exceptions gracefully rather than throwing. ",
  "main": "dist/index.js",
  "module": "dist/index.mjs",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "tsup src/index.ts --format cjs,esm --dts",
    "test": "ts-node -r tsconfig-paths/register test/deepclone.test.ts",
    "docs": "typedoc"
  },
  "keywords": [
    "deepclone",
    "deepcopy",
    "deep",
    "clone",
    "object"
  ],
  "homepage": "https://github.com/opsimathically/deepclone",
  "devDependencies": {
    "@types/node": "^22.13.13",
    "@types/wtfnode": "^0.7.3",
    "esbuild": "^0.25.0",
    "eslint": "^9.20.1",
    "globals": "^15.14.0",
    "prettier": "^3.5.0",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "tsup": "^8.3.6",
    "typedoc": "^0.28.1",
    "typedoc-plugin-markdown": "^4.6.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.24.0",
    "wtfnode": "^0.10.0"
  },
  "author": "Jason Medeiros",
  "license": "MIT",
  "dependencies": {
    "fast-equals": "^5.2.2"
  }
}
